#!/usr/bin/env python

#  Copyright 2017 Keegan Joseph Brophy
#  Copyright 2017 Jonathan Anderson
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

"""
teq: teaching equivalencies database

This software is used to track teaching loads and course equivalencies for
instructors at Memorial University.

Usage:
    teq initdb
    teq import courses FILE...
    teq import people URL
    teq import offerings FILE...
    teq import csv FILE
    teq export TABLE
    teq serve [--port=PORT]

Commands:
    initdb           Create (empty) database, dropping any existing tables first
    import courses   Import calendar course descriptions (HTML format)
    import csv       Import an exported-and-edited database table (CSV format)
    import people    Import instructors' details (URL to HTML "People" webpage)
    import offerings Import Banner offering data (HTML format)
    export           Export a database table to CSV
    serve            Expose data through a local Web server

Options:
    -p,--port=PORT   TCP port to serve content on [default: 5000]
"""

import docopt
import sys

arguments = docopt.docopt(__doc__)

# Serving Web content is a bit special: we don't need to pre-open the database
# (the web app will handle per-connection DB opening/closing).
if arguments['serve']:
    import webapp
    try:
        port = int(arguments['--port'])
        app = webapp.create_app()
        app.run(port = port, debug = True)
        sys.exit(0)

    except ValueError:
        sys.stderr.write("Invalid port number: '%s'\n" % arguments['--port'])
        sys.exit(1)

import db
database = db.get()
database.connect()

import data_import

if arguments['initdb']:
    db.init(database)

elif arguments['import']:
    assert arguments['courses'] ^ arguments['people'] ^ arguments['offerings']

    if arguments['courses']:
        data_import.import_courses(arguments['FILE'], cli_progress)

    elif arguments['csv']:
        import Core
        Core.import_file(arguments['FILE'])

    elif arguments['people']:
        data_import.import_people(arguments['URL'])

    elif arguments['offerings']:
        data_import.import_offerings(arguments['FILE'], cli_progress)

elif arguments['export']:
    import Core
    Core.export_file(arguments['FILE'])

database.close()
